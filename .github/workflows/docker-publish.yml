name: Buduj i skanuj obraz Dockera

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  docker-build-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Klonuj repozytorium
        uses: actions/checkout@v4

      - name: Konfiguruj QEMU
        uses: docker/setup-qemu-action@v3

      - name: Konfiguruj Buildx
        uses: docker/setup-buildx-action@v3

      - name: Logowanie do GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Logowanie do DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Generuj tag SHA
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            docker.io/${{ secrets.DOCKERHUB_USER }}/zadanie2
          tags: type=sha

      - name: Buduj i wypchnij obraz
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Wyciągnij tag GHCR
        run: |
          echo "GHCR_TAG=$(echo '${{ steps.meta.outputs.tags }}' | grep -o 'ghcr.io[^ ]*')" >> $GITHUB_ENV

      - name: Pobierz i skanuj obraz Trivy
        run: |
          if [ -z "$GHCR_TAG" ]; then
            echo "::error ::Brak tagu GHCR – przerywam"
            exit 1
          fi
          docker pull "$GHCR_TAG"
          trivy image --format table --exit-code 1 --severity HIGH,CRITICAL "$GHCR_TAG"
        env:
          GHCR_TAG: ${{ env.GHCR_TAG }}
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GHCR_TOKEN }}
