name: Build & Push Weather App (multiarch + CVE check)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Docker metadata (tagging)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
            docker.io/${{ secrets.DOCKERHUB_USER }}/zadanie2
          tags: |
            type=sha

      - name: Build and export image (with cache)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USER }}/zadanie2-cache:latest
          cache-to: type=registry,ref=docker.io/${{ secrets.DOCKERHUB_USER }}/zadanie2-cache:latest,mode=max
          outputs: type=docker,dest=image.tar

      - name: Scan image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: image.tar
          format: table
          exit-code: 1
          severity: HIGH,CRITICAL

      - name: Load and push image to registries
        if: success()
        run: |
          docker load -i image.tar
          for tag in ${{ steps.meta.outputs.tags }}; do
            docker push "$tag"
          done
